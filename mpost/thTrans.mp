%% translations

let FixedStation = p_station_fixed_ASF;
let PaintedStation = p_station_painted_SKBB;
let NaturalStation = p_station_natural_ASF;              
let TemporaryStation = p_station_temporary_ASF;

let Stalactite = p_stalactite_UIS;
let Stalagmite = p_stalagmite_UIS;
let Pillar = p_pillar_UIS;
let Curtain = p_curtain_UIS;
let Helectite = p_helectite_UIS;
let Sodastraw = p_sodastraw_UIS;
let Crystal = p_crystal_UIS;
let Flowstone = p_flowstone_UIS;
let Moonmilk = p_moonmilk_UIS;
let Wallcalcite = p_wallcalcite_UIS;
let Popcorn = p_popcorn_UIS;
let Disk = p_disk_UIS;
let Gypsum = p_gypsum_CCNP;
let Aragonite = p_aragonite_CCNP;
let Cavepearl = p_cavepearl_JSSJ;
let Boxwork = p_undefined;                      % !
let Gypsumflower = p_gypsumflower_CCNP;
let Rimstonepool = p_rimstonepool_ASF;
let Rimstonedam = p_rimstonedam_ASF;
let Anostomosen = p_anastomose_UIS;
let Karren = p_karren_UIS;
let Scallop = p_scallop_UIS;
let Flute = p_flute_UIS;
let Raft = p_raft_CCNP;
let Raftcone = p_raftcone_CCNP;
let Spring = p_spring_SKBB;
let Sink = p_sink_SKBB;
let NarrowEnd = p_narrowend_UIS;
let LowEnd = p_lowend_UIS;
let FlowstoneChoke = p_flowstonechoke_CCNP;
let BreakdownChoke = p_breakdownchoke_CCNP;
let SedimentChoke = p_undefined;               % !
let Bedrock = p_bedrock_ASF;
let Clay = p_sand_UIS;                         % !
let Sand = p_sand_UIS;
let Pebbles = p_pebbles_UIS;
let Debris = p_debris_UIS;
let Blocks = p_blocks_UIS;
let Water = p_water_UIS;
let Ice = p_ice_UIS;
let ArcheoMaterial = p_archeomaterial_UIS;
let PaleoMaterial = p_paleomaterial_UIS;
let Guano = p_guano_UIS;
let VegetableDebris = p_vegetabledebris_ASF;
let Root = p_root_ASF;
let EntranceArrow = p_entrance_UIS;
let Paleoflow = p_waterflow_paleo_UIS;
let GradientArrow = p_gradient_UIS;
let PermanentStream = p_waterflow_permanent_UIS;
let IntermittentStream = p_waterflow_intermittent_UIS;
def Rope(expr pos,r,s,al) = p_equipment_SKBB(pos,1) enddef;          
def FixedLadder(expr pos,r,s,al) = p_equipment_SKBB(pos,2) enddef;   
def RopeLadder(expr pos,r,s,al) = p_equipment_SKBB(pos,3) enddef;    
def Steps(expr pos,r,s,al) = p_equipment_SKBB(pos,4) enddef;         
def Bridge(expr pos,r,s,al) = p_equipment_SKBB(pos,5) enddef;        
def Traverse(expr pos,r,s,al) = p_equipment_SKBB(pos,6) enddef;
def Anchor(expr pos,r,s,al) = p_equipment_SKBB(pos,7) enddef;
def Notequipped(expr pos,r,s,al) = p_equipment_SKBB(pos,8) enddef;
def AirflowArrow(expr pos,r,s,al) = p_airdraught_UIS(pos,r,s,3,al) enddef;
def Sectionarrow(expr pos,r) = p_section_SKBB(pos,r) enddef; % !
def Continuation = p_continuation_UIS enddef;


vardef Label@#(expr txt,pos,rot) = p_label@#(txt,pos,rot,0) enddef;
vardef Remark@#(expr txt,pos,rot) = p_label@#(txt,pos,rot,0) enddef;
vardef Circledlabel@#(expr txt,pos) = p_label@#(txt,pos,0,5) enddef;
vardef Boxedlabel@#(expr txt,pos) = p_label@#(txt,pos,0,6) enddef;
vardef Passage@#(expr txt,pos) = p_label@#(txt,pos,0,5) enddef;
vardef Passageheight@#(expr txt,pos) = p_label@#(txt,pos,0,2) enddef;
vardef Waterdepth@#(expr txt,pos) = p_label@#(txt,pos,0,3) enddef;
vardef PassageWater@#(expr txt,pos) = p_label@#(txt,pos,0,4) enddef;  % zatial bez zarovnania
vardef Altitudelabel@#(expr txt,pos) = p_label@#(txt,pos,0,1) enddef;
let Altitude = p_wall_altitude;
vardef Stationlabel@#(expr txt,pos) = p_label@#(txt,pos,0,0) enddef;
vardef Datelabel@#(expr txt,pos) = p_label@#(txt,pos,0,0) enddef;
vardef ElevDiff@#(expr txt,pos) = p_label@#(txt,pos,0,0) enddef;
vardef ElevDiffPos@#(expr txt,pos) = p_label@#(txt,pos,0,0) enddef;
vardef ElevDiffNeg@#(expr txt,pos) = p_label@#(txt,pos,0,0) enddef;

let ClayRndFill = thRandomsand_UIS;       % !
let SandRndFill = thRandomsand_UIS;       
let PebblesRndFill = thRandomsand_UIS;    % !
let DebrisRndFill = thRandomsand_UIS;     % !
let BlocksRndFill = thRandomsand_UIS;     % !
let FlowstoneRndFill = thRandomsand_UIS;  % !
let MoonmilkRndFill = thRandomsand_UIS;   % !
let IceRndFill = thRandomsand_UIS;        % !

let Hyperlink = p_undefined;                             % !
def Customsymbol(expr pos) = p_undefined(pos,0,1) enddef;

let Wall = l_wall_bedrock_UIS;
let Sandwall = l_wall_sand_SKBB;
let Claywall = l_wall_clay_SKBB;
let Pebbleswall = l_wall_pebbles_SKBB;
let Debriswall = l_wall_debris_SKBB;
let Blockswall = l_wall_blocks_SKBB;
let Icewall = l_wall_ice_SKBB;
let Underlyingwall = l_wall_underlying_UIS;
let Unsurveyedwall = l_wall_unsurveyed_SKBB;
let Presumedwall = l_wall_presumed_UIS;
let Invisiblewall = l_wall_invisible;

let FloorStep = l_pit_UIS;
let Pit = l_pit_UIS;
let CeilingStep = l_chimney_SKBB;
let Chimney = l_chimney_UIS;
let Overhang = l_overhang_SKBB;
let Floorcanyon = l_undefined;
let Ceilingcanyon = l_undefined;

let Slope = l_slope_SKBB;
let Contour = l_contour_UIS;

let Rockborder = l_rockborder_UIS;
let Rockedge = l_rockedge_UIS;
let Permanentwater = l_water_permanent_UIS;
let Intermittentwater = l_water_intermittent_JSSJ;
let Conjencturalwater = l_water_conjectural_SKBB;
let Visibleborder = l_border_visible_SKBB;
let Invisibleborder = l_border_invisible;
let Temporaryborder = l_border_temporary_SKBB;
let Rimstonepath = l_undefined;
let Flowstonepath = l_flowstone_UIS;
let Moonmilkpath = l_undefined;
let Fixedladderpath = l_undefined;
let Ropeladderpath = l_undefined;
let Bridgepath = l_undefined;
let Fixedline = l_undefined;
let Handrail = l_undefined;
let Fence = l_undefined;
let Concretewall = l_undefined;
let Door = l_undefined;
let Gate = l_undefined;
let Formedpath = l_undefined;
let Stepspath = l_undefined;
let Bridgepath = l_undefined;
let Sectionline = l_border_visible_SKBB;

def Freetext(expr path,style,string) = l_label(string,path) enddef;
let Custompath = thUndefinedPath;

let Polygon = thPolygon_SKBB;

let PatternFill = thPatternFill;

def Waterpattern = scantokens("thLakePattern_UIS") enddef;
def Sumppattern = scantokens("thSumpPattern_UIS") enddef;
def Claypattern = scantokens("thSandPattern_UIS") enddef;
def Sandpattern = scantokens("thSandPattern_UIS") enddef;
def Pebblespattern = scantokens("thDebrisPattern_SKBB") enddef;
def Debrispattern = scantokens("thDebrisPattern_SKBB") enddef;
def Blockspattern = scantokens("thDebrisPattern_SKBB") enddef;
def Flowstonepattern = scantokens("thLakePattern_UIS") enddef;
def Moonmilkpattern = scantokens("thLakePattern_UIS") enddef;
def Icepattern = scantokens("thLakePattern_UIS") enddef;
